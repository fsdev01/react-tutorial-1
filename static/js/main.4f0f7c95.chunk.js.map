{"version":3,"sources":["Table.jsx","Form.jsx","App.jsx","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","state","this","Component","Form","initalState","handleChange","event","target","value","setState","submitForm","handleSubmit","htmlFor","type","id","onChange","App","characters","character","modifiedState","filter","item","i","className","ReactDOM","render","document","getElementById"],"mappings":"sOAEMA,EAAc,WAClB,OACE,+BACE,4BACE,oCACA,mCACA,yCAMFC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,wBAAIC,IAAKD,GACP,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACE,4BAAQC,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,eAKR,OAAO,+BAAQJ,IAmBFU,E,4MAfbC,MAAQ,G,uDACE,IAAD,EACoCC,KAAKb,MAAxCE,EADD,EACCA,cAAeQ,EADhB,EACgBA,gBACvB,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CACER,cAAeA,EACfQ,gBAAiBA,S,GATPI,a,OCmBLC,E,4MA7CbC,YAAc,CACZT,KAAM,GACNC,IAAK,I,EAGPI,MAAQ,EAAKI,Y,EAEbC,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBZ,EADgB,EAChBA,KAAMa,EADU,EACVA,MACd,EAAKC,SAAL,eAAiBd,EAAOa,K,EAG1BE,WAAa,WAEX,EAAKtB,MAAMuB,aAAa,EAAKX,OAE7B,EAAKS,SAAS,EAAKL,c,uDAGX,IAAD,EACeH,KAAKD,MAAnBL,EADD,EACCA,KAAMC,EADP,EACOA,IACd,OACE,6BACE,2BAAOgB,QAAQ,QAAf,QACA,2BACEC,KAAK,OACLC,GAAG,OACHnB,KAAK,OACLa,MAAOb,EACPoB,SAAUd,KAAKI,eAEjB,2BAAOO,QAAQ,OAAf,OACA,2BACEC,KAAK,OACLC,GAAG,MACHnB,KAAK,MACLa,MAAOZ,EACPmB,SAAUd,KAAKI,eAEjB,4BAAQR,QAASI,KAAKS,YAAtB,e,GAxCWR,aCiCJc,E,4MA9BbhB,MAAQ,CACNiB,WAAY,CAAC,CAAEtB,KAAM,SAAUC,IAAK,W,EAGtCe,aAAe,SAACO,GACd,EAAKT,SAAS,CAAEQ,WAAW,GAAD,mBAAM,EAAKjB,MAAMiB,YAAjB,CAA6BC,O,EAGzDpB,gBAAkB,SAACL,GACjB,IAAM0B,EAAgB,EAAKnB,MAAMiB,WAAWG,QAAO,SAACC,EAAMC,GACxD,OAAO7B,IAAU6B,KAEnB,EAAKb,SAAS,CAAEQ,WAAYE,K,uDAI5B,OACE,yBAAKI,UAAU,aACb,8CACA,8EACA,kBAAC,EAAD,CACEjC,cAAeW,KAAKD,MAAMiB,WAC1BnB,gBAAiBG,KAAKH,kBAExB,kBAAC,EAAD,CAAMa,aAAcV,KAAKU,oB,GAzBfT,aCClBsB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.4f0f7c95.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n        <th>Delete</th>\n      </tr>\n    </thead>\n  );\n};\n\nconst TableBody = (props) => {\n  const rows = props.characterData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.job}</td>\n        <td>\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\n        </td>\n      </tr>\n    );\n  });\n  return <tbody>{rows}</tbody>;\n};\n\nclass Table extends Component {\n  state = {};\n  render() {\n    const { characterData, removeCharacter } = this.props;\n    return (\n      <table>\n        <TableHeader />\n        <TableBody\n          characterData={characterData}\n          removeCharacter={removeCharacter}\n        />\n      </table>\n    );\n  }\n}\n\nexport default Table;\n","import React, { Component } from \"react\";\n\nclass Form extends Component {\n  initalState = {\n    name: \"\",\n    job: \"\",\n  };\n\n  state = this.initalState;\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  submitForm = () => {\n    // Send data to parent\n    this.props.handleSubmit(this.state);\n    // Reset form to empty values\n    this.setState(this.initalState);\n  };\n\n  render() {\n    const { name, job } = this.state;\n    return (\n      <div>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          value={name}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"job\">Job</label>\n        <input\n          type=\"text\"\n          id=\"job\"\n          name=\"job\"\n          value={job}\n          onChange={this.handleChange}\n        />\n        <button onClick={this.submitForm}>Submit</button>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport Table from \"./Table\";\nimport Form from \"./Form\";\n\nclass App extends Component {\n  state = {\n    characters: [{ name: \"Robert\", job: \"Tutor\" }],\n  };\n\n  handleSubmit = (character) => {\n    this.setState({ characters: [...this.state.characters, character] });\n  };\n\n  removeCharacter = (index) => {\n    const modifiedState = this.state.characters.filter((item, i) => {\n      return index !== i;\n    });\n    this.setState({ characters: modifiedState });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>React Tutorial</h1>\n        <p>Add a person with a name and a job to the table</p>\n        <Table\n          characterData={this.state.characters}\n          removeCharacter={this.removeCharacter}\n        />\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}